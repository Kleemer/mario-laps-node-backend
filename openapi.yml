openapi: 3.0.1
info:
  title: MarioLaps API
  version: "1.0"
  description: The MarioLaps API
servers:
  - url: /
tags:
  - name: session
  - name: race
paths:
  /health:
    get:
      summary: Returns a healthcheck
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  uptime:
                    type: number
                  activeDatabaseConnections:
                    type: number
                required:
                  - uptime
                  - activeDatabaseConnections
  /users:
    get:
      summary: Returns the list of users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                required:
                  - data
  /users/{user}:
    get:
      summary: Get user
      parameters:
        - in: path
          name: user
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/User"
                required:
                  - data
  /sessions:
    get:
      summary: Returns the list of sessions
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Session"
                required:
                  - data
    post:
      summary: Create a new session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/SessionInput"
                - type: object
                  required:
                    - players
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/Session"
                required:
                  - data
  /sessions/{session}:
    get:
      summary: Get Session
      parameters:
        - in: path
          name: session
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/Session"
                required:
                  - data
    delete:
      summary: Delete Session
      responses:
        204:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/OkPayload"
                required:
                  - data
  /races:
    post:
      summary: Create a new race in the session
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RaceInput"
                - type: object
                  required:
                    - sessionId
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/Race"
                required:
                  - data
  /races/{race}:
    delete:
      summary: Delete race
      responses:
        204:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/OkPayload"
                required:
                  - data
  /races/{race}/laps:
    patch:
      summary: Update withLap
      parameters:
        - in: path
          name: race
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RaceLapInput"
                - type: object
                  required:
                    - withLap
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/Race"
                required:
                  - data
  /races/{race}/types:
    patch:
      summary: Update race type
      parameters:
        - in: path
          name: race
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RaceTypeInput"
                - type: object
                  required:
                    - type
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/Race"
                required:
                  - data
  /races/{race}/positions:
    post:
      summary: Add score to race
      parameters:
        - in: path
          name: race
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/RacePositionsInput"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/Race"
                required:
                  - data
    patch:
      summary: Patch race scores
      parameters:
        - in: path
          name: race
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/RacePositionsInput"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    items:
                      $ref: "#/components/schemas/Race"
                required:
                  - data
  /race-types:
    get:
      summary: Returns the list of race types
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/RaceType"
                required:
                  - data
components:
  schemas:
    Session:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        races:
          type: array
          items:
            $ref: "#/components/schemas/Race"
    Race:
      type: object
      properties:
        id:
          type: string
          format: uuid
        withLap:
          type: boolean
        sessionId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        positions:
          type: array
          items:
            $ref: "#/components/schemas/UserPosition"
        raceType:
          type: object
          nullable: true
          properties:
            data:
              $ref: "#/components/schemas/RaceType"
    RaceType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
    UserPosition:
      type: object
      properties:
        position:
          type: integer
        userId:
          type: string
          format: uuid
        raceId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
    OkPayload:
      type: object
      properties:
        ok:
          type: boolean
    SessionInput:
      type: object
      properties:
        players:
          type: array
          items:
            type: string
    RaceInput:
      type: object
      properties:
        sessionId:
          type: string
          format: uuid
    RaceLapInput:
      type: object
      properties:
        withLap:
          type: boolean
    RaceTypeInput:
      type: object
      properties:
        type:
          type: string
          nullable: true
    RacePositionsInput:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        position:
          type: integer
